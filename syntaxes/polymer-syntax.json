{
	"fileTypes": ["html", "htm", "shtml", "xhtml", "inc", "tmpl", "tpl"],
	"scopeName": "text.html.polymer",
	"firstLineMatch": "<(?i:(!DOCTYPE\\s*)?html)",
	"name": "Polymer",
	"patterns": [
		{
			"begin": "(<\\?)(xml)",
			"captures": {
				"1": {
					"name": "punctuation.definition.tag.html"
				},
				"2": {
					"name": "entity.name.tag.xml.html"
				}
			},
			"end": "(\\?>)",
			"name": "meta.tag.preprocessor.xml.html",
			"patterns": [
				{
					"include": "#tag-generic-attribute"
				},
				{
					"include": "#string-double-quoted"
				},
				{
					"include": "#string-single-quoted"
				}
			]
		},
		{
			"begin": "<!--",
			"captures": {
				"0": {
					"name": "punctuation.definition.comment.html"
				}
			},
			"end": "--\\s*>",
			"name": "comment.block.html",
			"patterns": [
				{
					"match": "--",
					"name": "invalid.illegal.bad-comments-or-CDATA.html"
				},
				{
					"include": "#embedded-code"
				}
			]
		},
		{
			"begin": "<!",
			"captures": {
				"0": {
					"name": "punctuation.definition.tag.html"
				}
			},
			"end": ">",
			"name": "meta.tag.sgml.html",
			"patterns": [
				{
					"begin": "(?i:DOCTYPE)",
					"captures": {
						"1": {
							"name": "entity.name.tag.doctype.html"
						}
					},
					"end": "(?=>)",
					"name": "meta.tag.sgml.doctype.html",
					"patterns": [
						{
							"match": "\"[^\">]*\"",
							"name": "string.quoted.double.doctype.identifiers-and-DTDs.html"
						}
					]
				},
				{
					"begin": "\\[CDATA\\[",
					"end": "]](?=>)",
					"name": "constant.other.inline-data.html"
				},
				{
					"match": "(\\s*)(?!--|>)\\S(\\s*)",
					"name": "invalid.illegal.bad-comments-or-CDATA.html"
				}
			]
		},
		{
			"include": "#embedded-code"
		},
		{
			"begin": "(?:^\\s+)?(<)((?i:style))\\b(?=[^>]*lang=('less'|\"less\"))(?![^>]*/>)",
			"captures": {
				"1": {
					"name": "punctuation.definition.tag.html"
				},
				"2": {
					"name": "entity.name.tag.style.html"
				},
				"3": {
					"name": "punctuation.definition.tag.html"
				}
			},
			"end": "(</)((?i:style))(>)(?:\\s*\\n)?",
			"patterns": [
				{
					"include": "#tag-stuff"
				},
				{
					"contentName": "source.css.less.embedded.html",
					"begin": "(>)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.tag.html"
						}
					},
					"end": "(?=</(?i:style))",
					"patterns": [
						{
							"include": "#embedded-code"
						},
						{
							"include": "source.css.less"
						}
					]
				}
			]
		},
		{
			"begin": "(?:^\\s+)?(<)((?i:style))\\b(?=[^>]*lang=('sass'|\"sass\"))(?![^>]*/>)",
			"captures": {
				"1": {
					"name": "punctuation.definition.tag.html"
				},
				"2": {
					"name": "entity.name.tag.style.html"
				},
				"3": {
					"name": "punctuation.definition.tag.html"
				}
			},
			"end": "(</)((?i:style))(>)(?:\\s*\\n)?",
			"patterns": [
				{
					"include": "#tag-stuff"
				},
				{
					"contentName": "source.sass.embedded.html",
					"begin": "(>)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.tag.html"
						}
					},
					"end": "(?=</(?i:style))",
					"patterns": [
						{
							"include": "#embedded-code"
						},
						{
							"include": "source.sass"
						}
					]
				}
			]
		},
		{
			"begin": "(?:^\\s+)?(<)((?i:style))\\b(?=[^>]*lang=('scss'|\"scss\"))(?![^/>]*/>\\s*$)",
			"captures": {
				"1": {
					"name": "punctuation.definition.tag.html"
				},
				"2": {
					"name": "entity.name.tag.style.html"
				},
				"3": {
					"name": "punctuation.definition.tag.html"
				}
			},
			"end": "(</)((?i:style))(>)(?:\\s*\\n)?",
			"patterns": [
				{
					"include": "#tag-stuff"
				},
				{
					"contentName": "source.css.scss.embedded.html",
					"begin": "(>)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.tag.html"
						}
					},
					"end": "(?=</(?i:style))",
					"patterns": [
						{
							"include": "#embedded-code"
						},
						{
							"include": "source.css.scss"
						}
					]
				}
			]
		},
		{
			"begin": "(?:^\\s+)?(<)((?i:style))\\b(?![^>]*/>)",
			"captures": {
				"1": {
					"name": "punctuation.definition.tag.html"
				},
				"2": {
					"name": "entity.name.tag.style.html"
				},
				"3": {
					"name": "punctuation.definition.tag.html"
				}
			},
			"end": "(</)((?i:style))(>)(?:\\s*\\n)?",
			"patterns": [
				{
					"include": "#tag-stuff"
				},
				{
					"contentName": "source.css.embedded.html",
					"begin": "(>)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.tag.html"
						}
					},
					"end": "(?=</(?i:style))",
					"patterns": [
						{
							"include": "#embedded-code"
						},
						{
							"include": "source.css"
						}
					]
				}
			]
		},
		{
			"begin":
				"(?:^\\s+)?(<)((?i:script))\\b(?![^>]*/>)(?![^>]*(?i:type.?=.?text/((?!javascript).*)))",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.tag.html"
				},
				"2": {
					"name": "entity.name.tag.script.html"
				}
			},
			"end": "(?<=</(script|SCRIPT))(>)(?:\\s*\\n)?",
			"endCaptures": {
				"2": {
					"name": "punctuation.definition.tag.html"
				}
			},
			"patterns": [
				{
					"include": "#tag-stuff"
				},
				{
					"contentName": "source.js.embedded.html",
					"begin": "(?<!</(?:script|SCRIPT))(>)",
					"captures": {
						"1": {
							"name": "punctuation.definition.tag.html"
						},
						"2": {
							"name": "entity.name.tag.script.html"
						}
					},
					"end": "(</)((?i:script))",
					"patterns": [
						{
							"captures": {
								"1": {
									"name": "punctuation.definition.comment.js"
								}
							},
							"match": "(//).*?((?=</script)|$\\n?)",
							"name": "comment.line.double-slash.js"
						},
						{
							"begin": "/\\*",
							"captures": {
								"0": {
									"name": "punctuation.definition.comment.js"
								}
							},
							"end": "\\*/|(?=</script)",
							"name": "comment.block.js"
						},
						{
							"include": "source.js"
						}
					]
				}
			]
		},
		{
			"begin": "(</?)((?i:body|head|html)(?=\\s|\\\\|>))",
			"captures": {
				"1": {
					"name": "punctuation.definition.tag.html"
				},
				"2": {
					"name": "entity.name.tag.structure.any.html"
				}
			},
			"end": "(>)",
			"name": "meta.tag.structure.any.html",
			"patterns": [
				{
					"include": "#tag-stuff"
				}
			]
		},
		{
			"begin": "(</?)((?i:dom-module|template|content|slot)(?=\\s|\\\\|>))",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.tag.begin.html"
				},
				"2": {
					"name": "entity.special.support.name.tag.html"
				}
			},
			"end": "(>)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.tag.end.html"
				}
			},
			"name": "meta.tag.special.component.html",
			"patterns": [
				{
					"include": "#tag-stuff"
				}
			]
		},
		{
			"begin":
				"(</?)((?i:address|blockquote|dd|div|section|article|aside|header|footer|nav|menu|dl|dt|fieldset|form|frame|frameset|h1|h2|h3|h4|h5|h6|iframe|noframes|object|ol|p|ul|applet|center|dir|hr|pre)(?=\\s|\\\\|>))",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.tag.begin.html"
				},
				"2": {
					"name": "entity.name.tag.block.any.html"
				}
			},
			"end": "(>)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.tag.end.html"
				}
			},
			"name": "meta.tag.block.any.html",
			"patterns": [
				{
					"include": "#tag-stuff"
				}
			]
		},
		{
			"begin":
				"(</?)((?i:a|abbr|acronym|area|b|base|basefont|bdo|big|br|button|caption|cite|code|col|colgroup|del|dfn|em|font|head|html|i|img|input|ins|isindex|kbd|label|legend|li|map|noscript|optgroup|option|param|q|s|samp|script|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|u|var)(?=\\s|\\\\|>))",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.tag.begin.html"
				},
				"2": {
					"name": "entity.name.tag.inline.any.html"
				}
			},
			"end": "((?: ?/)?>)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.tag.end.html"
				}
			},
			"name": "meta.tag.inline.any.html",
			"patterns": [
				{
					"include": "#tag-stuff"
				}
			]
		},
		{
			"begin": "(</?)((?i:link|meta)(?=\\s|\\\\|>))",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.tag.begin.html"
				},
				"2": {
					"name": "entity.name.tag.link-meta.any.html"
				}
			},
			"end": "((?: ?/)?>)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.tag.end.html"
				}
			},
			"name": "meta.tag.inline.any.html",
			"patterns": [
				{
					"include": "#tag-stuff"
				}
			]
		},
		{
			"begin": "(</?)([a-zA-Z0-9:\\-]+)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.tag.begin.html"
				},
				"2": {
					"name": "entity.name.tag.other.html"
				}
			},
			"end": "(>)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.tag.end.html"
				}
			},
			"name": "meta.tag.other.html",
			"patterns": [
				{
					"include": "#tag-stuff"
				}
			]
		},
		{
			"begin": "(<)([a-zA-Z0-9:\\-]++)(?=[^>]*>)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.tag.html"
				},
				"2": {
					"name": "entity.name.tag.html"
				}
			},
			"end": "(>(<)/)(\\2)(>)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.tag.html"
				},
				"2": {
					"name": "meta.scope.between-tag-pair.html"
				},
				"3": {
					"name": "entity.name.tag.html"
				},
				"4": {
					"name": "punctuation.definition.tag.html"
				}
			},
			"name": "meta.tag.any.html",
			"patterns": [
				{
					"include": "#tag-stuff"
				}
			]
		},
		{
			"include": "#entities"
		},
		{
			"match": "<>",
			"name": "invalid.illegal.incomplete.html"
		}
	],
	"repository": {
		"embedded-code": {
			"patterns": [
				{
					"include": "#polymer"
				}
			]
		},
		"entities": {
			"patterns": [
				{
					"match": "(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)",
					"captures": {
						"1": {
							"name": "punctuation.definition.entity.begin.html"
						},
						"2": {
							"name": "entity.name.entity.other.html"
						},
						"3": {
							"name": "punctuation.definition.entity.end.html"
						}
					},
					"name": "constant.character.entity.html"
				},
				{
					"match": "&",
					"name": "invalid.illegal.bad-ampersand.html"
				}
			]
		},
		"polymer": {
			"patterns": [
				{
					"include": "#binding-curly"
				},
				{
					"include": "#binding-square"
				}
			]
		},
		"binding-curly": {
			"begin": "\\{\\{",
			"beginCaptures": {
				"0": {
					"name": "italic.punctuation.definition.binding.curly.begin.html"
				}
			},
			"end": "\\}\\}",
			"endCaptures": {
				"0": {
					"name": "italic.punctuation.definition.binding.curly.end.html"
				}
			},
			"name": "binding.curly.html",
			"patterns": [
				{
					"include": "#polymer-function"
				},
				{
					"include": "#polymer-variable-event"
				},
				{
					"include": "#polymer-variable"
				}
			]
		},
		"binding-square": {
			"begin": "\\[\\[",
			"beginCaptures": {
				"0": {
					"name": "italic.punctuation.definition.binding.square.begin.html"
				}
			},
			"end": "\\]\\]",
			"endCaptures": {
				"0": {
					"name": "italic.punctuation.definition.binding.square.end.html"
				}
			},
			"name": "binding.square.html",
			"patterns": [
				{
					"include": "#polymer-function"
				},
				{
					"include": "#polymer-variable-event"
				},
				{
					"include": "#polymer-conditional-negate"
				},
				{
					"include": "#polymer-variable"
				}
			]
		},
		"polymer-function": {
			"begin": "([\\w.-]+)(\\()",
			"beginCaptures": {
				"1": {
					"name": "support.function.js"
				},
				"2": {
					"name": "meta.brace.round.js"
				}
			},
			"end": "(\\))",
			"endCaptures": {
				"0": {
					"name": "meta.brace.round.js"
				}
			},
			"name": "binding.function.html",
			"patterns": [
				{
					"match": ",",
					"name": "punctuation.separator.comma.js.html"
				},
				{
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.html"
						}
					},
					"contentName": "support.function.html",
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.html"
						}
					},
					"name": "string.quoted.double.html"
				},
				{
					"begin": "'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.html"
						}
					},
					"contentName": "",
					"end": "'",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.html"
						}
					},
					"name": "string.quoted.single.html"
				},
				{
					"include": "#polymer-conditional-negate"
				},
				{
					"include": "#polymer-variable"
				},
				{
					"include": "$self"
				}
			]
		},
		"polymer-conditional-negate": {
			"match": "!",
			"name": "keyword.operator.logical.not.js.html"
		},
		"polymer-variable-event": {
			"match": "::[\\w.-]+",
			"name": "support.function.event-handler.binding.js.html"
		},
		"polymer-variable": {
			"match": "[\\w.-]+",
			"name":
				"meta.definition.variable.js.html variable.other.readwrite.js.html"
		},
		"string-double-quoted": {
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.html"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.html"
				}
			},
			"name": "string.quoted.double.html",
			"patterns": [
				{
					"include": "#embedded-code"
				},
				{
					"include": "#entities"
				}
			]
		},
		"string-single-quoted": {
			"begin": "'",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.html"
				}
			},
			"end": "'",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.html"
				}
			},
			"name": "string.quoted.single.html",
			"patterns": [
				{
					"include": "#embedded-code"
				},
				{
					"include": "#entities"
				}
			]
		},
		"tag-boolean-attribute": {
			"match": "(?<=[^=])\\b([a-zA-Z0-9:-]+)(?=\\s+|>)",
			"name": "entity.other.attribute-name.boolean.html"
		},
		"tag-generic-attribute": {
			"begin": "\\b([a-zA-Z0-9:-]+)\\b\\s*(\\$?=)",
			"captures": {
				"1": {
					"name": "entity.other.attribute-name.html"
				},
				"2": {
					"name": "punctuation.separator.key-value.html"
				}
			},
			"end": "(?!\\G)(?<='|\"|[^\\s<>/])",
			"name": "meta.attribute-with-value.other.html",
			"patterns": [
				{
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.html"
						}
					},
					"contentName": "meta.toc-list.other.html",
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.html"
						}
					},
					"name": "string.quoted.double.html",
					"patterns": [
						{
							"include": "#embedded-code"
						},
						{
							"include": "#entities"
						}
					]
				},
				{
					"begin": "'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.html"
						}
					},
					"contentName": "meta.toc-list.other.html",
					"end": "'",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.html"
						}
					},
					"name": "string.quoted.single.html",
					"patterns": [
						{
							"include": "#embedded-code"
						},
						{
							"include": "#entities"
						}
					]
				},
				{
					"captures": {
						"0": {
							"name": "meta.toc-list.other.html"
						}
					},
					"match": "(?<==)(?:[^\\s<>/'\"]|/(?!>))+",
					"name": "string.unquoted.html"
				}
			]
		},
		"tag-id-attribute": {
			"begin": "\\b(id)\\b\\s*(\\$?=)",
			"captures": {
				"1": {
					"name": "entity.other.attribute-name.id.html"
				},
				"2": {
					"name": "punctuation.separator.key-value.html"
				}
			},
			"end": "(?!\\G)(?<='|\"|[^\\s<>/])",
			"name": "meta.attribute-with-value.id.html",
			"patterns": [
				{
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.html"
						}
					},
					"contentName": "meta.toc-list.id.html",
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.html"
						}
					},
					"name": "string.quoted.double.html",
					"patterns": [
						{
							"include": "#embedded-code"
						},
						{
							"include": "#entities"
						}
					]
				},
				{
					"begin": "'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.html"
						}
					},
					"contentName": "meta.toc-list.id.html",
					"end": "'",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.html"
						}
					},
					"name": "string.quoted.single.html",
					"patterns": [
						{
							"include": "#embedded-code"
						},
						{
							"include": "#entities"
						}
					]
				},
				{
					"captures": {
						"0": {
							"name": "meta.toc-list.id.html"
						}
					},
					"match": "(?<==)(?:[^\\s<>/'\"]|/(?!>))+",
					"name": "string.unquoted.html"
				}
			]
		},
		"tag-event-attribute": {
			"begin": "\\b(on-[a-zA-Z0-9:-]+)\\b\\s*(\\$?=)",
			"captures": {
				"1": {
					"name": "support.function.event-handler.attribute.js.html"
				},
				"2": {
					"name": "punctuation.separator.key-value.html"
				}
			},
			"end": "(?!\\G)(?<='|\"|[^\\s<>/])",
			"name": "meta.attribute-with-value.event.html",
			"patterns": [
				{
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.html"
						}
					},
					"contentName": "support.function.html",
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.html"
						}
					},
					"name": "string.quoted.double.html"
				},
				{
					"begin": "'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.html"
						}
					},
					"contentName": "support.function.html",
					"end": "'",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.html"
						}
					},
					"name": "string.quoted.single.html"
				}
			]
		},
		"tag-as-attribute": {
			"begin": "\\b(index-as|as)\\b\\s*(\\$?=)",
			"captures": {
				"1": {
					"name": "entity.other.attribute-name.as.html"
				},
				"2": {
					"name": "punctuation.separator.key-value.html"
				}
			},
			"end": "(?!\\G)(?<='|\"|[^\\s<>/])",
			"name": "meta.attribute-with-value.as.html",
			"patterns": [
				{
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.html"
						}
					},
					"contentName": "meta.toc-list.id.html",
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.html"
						}
					},
					"name": "string.quoted.double.html",
					"patterns": [
						{
							"include": "#embedded-code"
						},
						{
							"include": "#entities"
						}
					]
				},
				{
					"begin": "'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.html"
						}
					},
					"contentName": "meta.toc-list.id.html",
					"end": "'",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.html"
						}
					},
					"name": "string.quoted.single.html",
					"patterns": [
						{
							"include": "#embedded-code"
						},
						{
							"include": "#entities"
						}
					]
				},
				{
					"captures": {
						"0": {
							"name": "meta.toc-list.id.html"
						}
					},
					"match": "(?<==)(?:[^\\s<>/'\"]|/(?!>))+",
					"name": "string.unquoted.html"
				}
			]
		},
		"tag-stuff": {
			"patterns": [
				{
					"include": "#tag-id-attribute"
				},
				{
					"include": "#tag-event-attribute"
				},
				{
					"include": "#tag-as-attribute"
				},
				{
					"include": "#tag-boolean-attribute"
				},
				{
					"include": "#tag-generic-attribute"
				},
				{
					"include": "#string-double-quoted"
				},
				{
					"include": "#string-single-quoted"
				},
				{
					"include": "#embedded-code"
				},
				{
					"include": "#unquoted-attribute"
				}
			]
		},
		"unquoted-attribute": {
			"match": "(?<==)(?:[^\\s<>/'\"]|/(?!>))+",
			"name": "string.unquoted.html"
		}
	}
}
